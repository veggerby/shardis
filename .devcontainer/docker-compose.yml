services:
  app:
    image: mcr.microsoft.com/devcontainers/base:bookworm
    depends_on:
      - db
      - pgadmin
    environment:
      GH_TOKEN: ${GH_TOKEN:-}
      NPM_AUTH_TOKEN: ${GH_TOKEN:-}
      # Helps the dotnet cli not throwing exceptions on arm based macs
      DOTNET_EnableWriteXorExecute: '0'
      POSTGRES_CONNECTION: "Host=db;Port=5432;Username=postgres;Database=shardis"
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../..:/workspaces:cached
    # Keep container alive
    command: sleep infinity

  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: shardis
    ports:
      - "${PG_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: 'no'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-postgres}
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_LISTEN_ADDRESS: '0.0.0.0'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-15432}:80"

volumes:
  pgdata:
  pgadmin:

networks:
  default:
    enable_ipv6: false